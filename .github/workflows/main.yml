# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: tesla
          POSTGRES_PASSWORD: tesla
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
          
      - name: Install System Libs
        run: |
          sudo apt-get update
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Create Database
        env:
          TEST_DB_HOST: localhost
          TEST_DB_USER: tesla
          TEST_DB_NAME: biblioteca_pessoal_test
          RAILS_ENV: test
        run: |
          cd aplicacao/
          bin/rails db:create

      - name: Run Rubocop
        env:
          TEST_DB_HOST: localhost
          TEST_DB_USER: tesla
          TEST_DB_NAME: biblioteca_pessoal_test
          RAILS_ENV: test
        run: |
          bundle exec rubocop --config .rubocop.yml --parallel

      - name: Run Tests
        env:
          TEST_DB_HOST: localhost
          TEST_DB_USER: tesla
          TEST_DB_NAME: biblioteca_pessoal_test
          RAILS_ENV: test
          DISABLE_SPRING: 1
        run: |
          bundle exec rails db:environment:set RAILS_ENV=test
          bundle exec rails db:schema:load
          bundle exec rails test:vendors

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ../../aplicacao
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gcestrabalho:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
